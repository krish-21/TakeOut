{"version":3,"sources":["components/Cart/CartItem.module.css","components/Cart/Cart.module.css","components/Layout/HeaderCartButton.module.css","components/Layout/Header.module.css","components/UI/Modal.module.css","components/Food/FoodItem/FoodItem.module.css","components/UI/TaglineCard.module.css","components/UI/Input.module.css","components/Food/AvailableFood.module.css","components/UI/Card.module.css","components/Food/FoodItem/FoodItemForm.module.css","store/cart-context.js","store/CartProvider.js","assets/food-table.jpeg","components/Cart/CartIcon.js","components/Layout/HeaderCartButton.js","components/Layout/Header.js","components/UI/Modal.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/UI/TaglineCard.js","utils/dummy-food.js","components/UI/Card.js","components/UI/Input.js","components/Food/FoodItem/FoodItemForm.js","components/Food/FoodItem/FoodItem.js","components/Food/AvailableFood.js","components/Food/Food.js","App.js","index.js"],"names":["module","exports","CartContext","createContext","items","totalAmount","addItem","item","removeItem","id","defaultCart","cartReducer","state","action","type","updatedItems","updatedTotalAmount","payload","price","amount","existingItemIndex","findIndex","existingItem","updatedCartItem","concat","filter","updatedItem","CartProvider","props","useReducer","cartState","dispatchCartAction","cartContext","Provider","value","children","CartIcon","xmlns","viewBox","fill","d","HeaderCardButton","useState","isBtnHighlighted","setIsBtnHighlighted","noOfCartItems","useContext","reduce","currentNumber","btnClasses","styles","button","bump","useEffect","timer","setTimeout","clearTimeout","className","onClick","icon","badge","Header","header","HeaderCartButton","onShowCart","src","foodImage","alt","Backdrop","backdrop","onClose","ModalOverlay","modal","content","Modal","portalElement","document","getElementById","ReactDOM","createPortal","CartItem","toFixed","name","summary","actions","onRemove","onAdd","Cart","cartCtx","cartItems","map","handleAddCartItem","isCartEmpty","length","total","TaglineCard","DUMMY_FOOD","description","Card","card","Input","forwardRef","ref","input","label","htmlFor","displayName","FoodItemForm","amountInputRef","useRef","form","onSubmit","event","preventDefault","enteredAmount","parseInt","current","trim","onAddToCart","min","max","step","defaultValue","required","FoodItem","AvailableFood","foodList","food","Food","App","showCart","setShowCart","render"],"mappings":"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","file":"static/js/main.e93d06b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1B1_q\",\"summary\":\"CartItem_summary__3FMDj\",\"amount\":\"CartItem_amount__jUKEC\",\"price\":\"CartItem_price__2Nl0j\",\"actions\":\"CartItem_actions__UwVPJ\",\"inc-button\":\"CartItem_inc-button__xrkCo\",\"dec-button\":\"CartItem_dec-button__25QnX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__2pjQw\",\"empty-text\":\"Cart_empty-text__1Lvem\",\"orange-text\":\"Cart_orange-text__5RIIW\",\"total\":\"Cart_total__3pLin\",\"actions\":\"Cart_actions__1GOmr\",\"button-alt\":\"Cart_button-alt__2s6rq\",\"button\":\"Cart_button__fw1-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3CMOT\",\"icon\":\"HeaderCartButton_icon__9KWtg\",\"badge\":\"HeaderCartButton_badge__1Z3gL\",\"bump\":\"HeaderCartButton_bump__3atD4\",\"cart-text\":\"HeaderCartButton_cart-text__2Vr2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"green-title\":\"Header_green-title__rE5SI\",\"main-img\":\"Header_main-img__1rqjm\",\"big-title\":\"Header_big-title__3hRsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1mfF6\",\"modal\":\"Modal_modal__4DXUe\",\"slide-down\":\"Modal_slide-down__W3MdX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"food-item\":\"FoodItem_food-item__2z3uE\",\"description\":\"FoodItem_description__38xO_\",\"price\":\"FoodItem_price__3FWUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"TaglineCard_summary__3Sm2P\",\"green-title\":\"TaglineCard_green-title__3F0-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2swPp\",\"label\":\"Input_label__3uKZ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"food\":\"AvailableFood_food__35M2b\",\"food-appear\":\"AvailableFood_food-appear__1Wijq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FoodItemForm_form__2V9O8\"};","// React Hooks\nimport { createContext } from \"react\";\n\n// Context for Cart\nconst CartContext = createContext({\n  items: [],\n  totalAmount: 0,\n  // eslint-disable-next-line no-unused-vars\n  addItem: (item) => {},\n  // eslint-disable-next-line no-unused-vars\n  removeItem: (id) => {},\n});\n\nexport default CartContext;\n","// React Hooks & Packages\nimport { useReducer } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Context\nimport CartContext from \"./cart-context\";\n\n// Default Value for Cart\nconst defaultCart = {\n  items: [],\n  totalAmount: 0,\n};\n\n// Reducer function for Cart\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    // add Item to Cart\n    case \"ADD_ITEM\": {\n      // update Cart Total\n      const updatedTotalAmount =\n        state.totalAmount + action.payload.price * action.payload.amount;\n\n      // extract index of item in cart\n      const existingItemIndex = state.items.findIndex(\n        (item) => item.id === action.payload.id\n      );\n\n      // extract item from cart\n      const existingItem = state.items[existingItemIndex];\n\n      let updatedItems;\n\n      if (existingItem) {\n        // update extracted item\n        const updatedCartItem = {\n          ...existingItem,\n          amount: existingItem.amount + action.payload.amount,\n        };\n\n        // add updated item to items array\n        updatedItems = [...state.items];\n        updatedItems[existingItemIndex] = updatedCartItem;\n      } else {\n        // add new item to items array\n        updatedItems = state.items.concat(action.payload);\n      }\n\n      // return new updated state\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount,\n      };\n    }\n\n    //Remove Item from Cart\n    case \"REMOVE_ITEM\": {\n      // extract index of item in cart\n      const existingItemIndex = state.items.findIndex(\n        (item) => item.id === action.payload\n      );\n\n      // extract item from cart\n      const existingItem = state.items[existingItemIndex];\n\n      // update Cart Total\n      let updatedTotalAmount = state.totalAmount - existingItem.price;\n      updatedTotalAmount < 0 ? (updatedTotalAmount = 0) : true;\n\n      let updatedItems;\n\n      if (existingItem.amount === 1) {\n        // remove item from items array\n        updatedItems = state.items.filter((item) => item.id !== action.payload);\n      } else {\n        // update extracted item\n        const updatedItem = {\n          ...existingItem,\n          amount: existingItem.amount - 1,\n        };\n\n        // add updated item to items array\n        updatedItems = [...state.items];\n        updatedItems[existingItemIndex] = updatedItem;\n      }\n\n      // return new updated state\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount,\n      };\n    }\n\n    // return old state if no matching action\n    default:\n      return state;\n  }\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCart);\n\n  const handleAddItem = (item) => {\n    dispatchCartAction({ type: \"ADD_ITEM\", payload: item });\n  };\n\n  const handleRemoveItem = (id) => {\n    dispatchCartAction({ type: \"REMOVE_ITEM\", payload: id });\n  };\n\n  // connect state and context\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: handleAddItem,\n    removeItem: handleRemoveItem,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nCartProvider.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default CartProvider;\n","export default __webpack_public_path__ + \"static/media/food-table.69f83e2b.jpeg\";","const CartIcon = () => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      viewBox='0 0 20 20'\n      fill='currentColor'\n    >\n      <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\n    </svg>\n  );\n};\n\nexport default CartIcon;","// React Hooks & Packages\nimport { useState, useEffect, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Context\nimport CartContext from \"../../store/cart-context\";\n\n// Custom Components\nimport CartIcon from \"../Cart/CartIcon\";\nimport styles from \"./HeaderCartButton.module.css\";\n\nconst HeaderCardButton = (props) => {\n  const [isBtnHighlighted, setIsBtnHighlighted] = useState(false);\n\n  const cartCtx = useContext(CartContext);\n\n  // Total number of individual Items in Cart\n  const noOfCartItems = cartCtx.items.reduce(\n    (currentNumber, item) => currentNumber + item.amount,\n    0\n  );\n\n  const btnClasses = `${styles.button} ${isBtnHighlighted && styles.bump}`;\n\n  // Side Effect for Added to Cart Animation\n  useEffect(() => {\n    if (!noOfCartItems) {\n      return;\n    }\n\n    setIsBtnHighlighted(true);\n\n    const timer = setTimeout(() => {\n      setIsBtnHighlighted(false);\n    }, 300);\n\n    // Cleanup Function\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [noOfCartItems]);\n\n  return (\n    <button className={btnClasses} onClick={props.onClick}>\n      {/* Cart Icon */}\n      <span className={styles.icon}>\n        <CartIcon />\n      </span>\n\n      {/* Cart Text */}\n      <span className={styles[\"cart-text\"]}>Cart</span>\n\n      {/* No. of items in Cart */}\n      <span className={styles.badge}>{noOfCartItems}</span>\n    </button>\n  );\n};\n\nHeaderCardButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default HeaderCardButton;\n","// Packages\nimport Proptypes from \"prop-types\";\n\n// Assets\nimport foodImage from \"../../assets/food-table.jpeg\";\n\n// CSS Modules\nimport styles from \"./Header.module.css\";\n\n// Custom Components\nimport HeaderCartButton from \"./HeaderCartButton\";\n\nconst Header = (props) => {\n  return (\n    <>\n      {/* Header with Title & Cart */}\n      <header className={styles.header}>\n        <h1 className={styles[\"big-title\"]}>\n          Take<span className={styles[\"green-title\"]}>Out</span>\n        </h1>\n        <HeaderCartButton onClick={props.onShowCart} />\n      </header>\n\n      {/* Top Level Image */}\n      <div className={styles[\"main-img\"]}>\n        <img src={foodImage} alt=\"A table full of delicious food\" />\n      </div>\n    </>\n  );\n};\n\nHeader.propTypes = {\n  onShowCart: Proptypes.func,\n};\n\nexport default Header;\n","// ReactDOM & Packages\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\n// CSS Modules\nimport styles from \"./Modal.module.css\";\n\n// Backdrop to disable the page in the background\nconst Backdrop = (props) => (\n  <div className={styles.backdrop} onClick={props.onClose}></div>\n);\n\nBackdrop.propTypes = {\n  onClose: PropTypes.func,\n};\n\n// Modal Overlay which contais the Modal\nconst ModalOverlay = (props) => {\n  return (\n    <div className={styles.modal}>\n      <div className={styles.content}>{props.children}</div>\n    </div>\n  );\n};\n\nModalOverlay.propTypes = {\n  children: PropTypes.node,\n};\n\n// Modal which should be dismissed to resume functioning of website\nconst Modal = (props) => {\n  const portalElement = document.getElementById(\"overlays\");\n  return (\n    <>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.onClose} />,\n        portalElement\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        portalElement\n      )}\n    </>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n};\n\nexport default Modal;\n","// Packages\nimport PropTypes from \"prop-types\";\n\n// CSS Modules\nimport styles from \"./CartItem.module.css\";\n\nconst CartItem = (props) => {\n  const price = `$${props.price.toFixed(2)}`;\n\n  return (\n    <li className={styles[\"cart-item\"]}>\n      {/* Individual Food Item */}\n      <div>\n        <h2>{props.name}</h2>\n        <div className={styles.summary}>\n          <span className={styles.amount}> x {props.amount}</span>\n          <span className={styles.price}>{price}</span>\n        </div>\n      </div>\n\n      {/* Buttons to remove & add items from Cart */}\n      <div className={styles.actions}>\n        <button className={styles[\"dec-button\"]} onClick={props.onRemove}>\n          -\n        </button>\n        <button className={styles[\"inc-button\"]} onClick={props.onAdd}>\n          +\n        </button>\n      </div>\n    </li>\n  );\n};\n\nCartItem.propTypes = {\n  name: PropTypes.string,\n  price: PropTypes.number,\n  amount: PropTypes.number,\n  onRemove: PropTypes.func,\n  onAdd: PropTypes.func,\n};\n\nexport default CartItem;\n","// React Hooks & Packages\nimport { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Context\nimport CartContext from \"../../store/cart-context\";\n\n// CSS Modules\nimport styles from \"./Cart.module.css\";\n\n// Custom Components\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = (props) => {\n  const cartCtx = useContext(CartContext);\n\n  const handleRemoveCartItem = (id) => {\n    cartCtx.removeItem(id);\n  };\n\n  const handleAddCartItem = (item) => {\n    cartCtx.addItem({ ...item, amount: 1 });\n  };\n\n  // ul with all individual CartItems\n  const cartItems = (\n    <ul className={styles[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          price={item.price}\n          amount={item.amount}\n          onRemove={() => handleRemoveCartItem(item.id)}\n          onAdd={() => handleAddCartItem(item)}\n        />\n      ))}\n    </ul>\n  );\n\n  // Total Amount of all items in Cart\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n\n  // Bool is Cart is Empty\n  const isCartEmpty = !(cartCtx.items.length > 0);\n\n  return (\n    <Modal onClose={props.onClose}>\n      {/* If Cart is empty, show message */}\n      {/* Otherwise, render Cart Items List */}\n      {isCartEmpty ? (\n        <div className={styles[\"empty-text\"]}>\n          <h2>Tasty Food is Cooking</h2>\n          <p>ADD ITEMS TO YOUR CART TO PLACE YOUR ORDER</p>\n        </div>\n      ) : (\n        // ul with CartItems\n        cartItems\n      )}\n\n      {/* Cart Summary */}\n      <div className={styles.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span>\n      </div>\n\n      {/* Buttons to Close & Place Order */}\n      <div className={styles.actions}>\n        <button className={styles[\"button-alt\"]} onClick={props.onClose}>\n          Close\n        </button>\n\n        {/* If Cart is not empty, render Button to Place Order */}\n        {!isCartEmpty && <button className={styles.button}>Place Order</button>}\n      </div>\n    </Modal>\n  );\n};\n\nCart.propTypes = {\n  onClose: PropTypes.func,\n};\n\nexport default Cart;\n","// CSS Modules\nimport styles from \"./TaglineCard.module.css\";\n\nconst TaglineCard = () => {\n  return (\n    // Small Card for TagLine\n    <section className={styles.summary}>\n      <h2>\n        <span className={styles[\"green-title\"]}>Delicious Food</span>, Delivered\n        to You\n      </h2>\n    </section>\n  );\n};\n\nexport default TaglineCard;\n","// Dummy Data\nconst DUMMY_FOOD = [\n  {\n    id: \"df_1\",\n    name: \"Sushi\",\n    description: \"Finest fish and veggies\",\n    price: 22.99,\n  },\n  {\n    id: \"df_2\",\n    name: \"Schnitzel\",\n    description: \"A german specialty!\",\n    price: 16.5,\n  },\n  {\n    id: \"df_3\",\n    name: \"Barbecue Burger\",\n    description: \"American, raw, meaty\",\n    price: 12.99,\n  },\n  {\n    id: \"df_4\",\n    name: \"Green Bowl\",\n    description: \"Healthy...and green...\",\n    price: 18.99,\n  },\n];\n\nexport default DUMMY_FOOD;\n","// Packages\nimport PropTypes from \"prop-types\";\n\n// Css Modules\nimport styles from \"./Card.module.css\";\n\n// Wrapper Component for Consistent Styling\nconst Card = (props) => {\n  return <div className={styles.card}>{props.children}</div>;\n};\n\nCard.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Card;\n","// React Functions & Packages\nimport { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// CSS Modules\nimport styles from \"./Input.module.css\";\n\n// Ref forwarder from Custom <Input /> Component\nconst Input = forwardRef((props, ref) => {\n  return (\n    <div className={styles.input}>\n      <label className={styles.label} htmlFor={props.input.id}>\n        {props.label}\n      </label>\n      <input ref={ref} {...props.input} />\n    </div>\n  );\n});\n\nInput.propTypes = {\n  label: PropTypes.string,\n  input: PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.string,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    step: PropTypes.string,\n    defaultValue: PropTypes.string,\n    required: PropTypes.bool,\n  }),\n};\n\nInput.displayName = \"Button\";\n\nexport default Input;\n","// React Hooks & Packages\nimport { useRef } from \"react\";\nimport Proptypes from \"prop-types\";\n\n// CSS Modules\nimport styles from \"./FoodItemForm.module.css\";\n\n// Custom Components\nimport Input from \"../../UI/Input\";\n\nconst FoodItemForm = (props) => {\n  const amountInputRef = useRef();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const enteredAmount = parseInt(amountInputRef.current.value.trim());\n    props.onAddToCart(enteredAmount);\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <Input\n        ref={amountInputRef}\n        label=\"Amount\"\n        input={{\n          id: props.id,\n          type: \"number\",\n          min: \"1\",\n          max: \"5\",\n          step: \"1\",\n          defaultValue: \"1\",\n          required: true,\n        }}\n      />\n      <button>+ Add</button>\n    </form>\n  );\n};\n\nFoodItemForm.propTypes = {\n  id: Proptypes.string,\n  onAddToCart: Proptypes.func,\n};\n\nexport default FoodItemForm;\n","// React Hooks & Packages\nimport { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Context\nimport CartContext from \"../../../store/cart-context\";\n\n// CSS Modules\nimport styles from \"./FoodItem.module.css\";\n\n// Custom Components\nimport FoodItemFrom from \"./FoodItemForm\";\n\nconst FoodItem = (props) => {\n  const cartCtx = useContext(CartContext);\n\n  const price = `$${props.price.toFixed(2)}`;\n\n  const handleAddToCart = (amount) => {\n    cartCtx.addItem({\n      id: props.id,\n      name: props.name,\n      amount: amount,\n      price: props.price,\n    });\n  };\n\n  return (\n    <li className={styles[\"food-item\"]}>\n      {/* FoodItem Details */}\n      <div>\n        <h3>{props.name}</h3>\n        <div className={styles.description}>{props.description}</div>\n        <div className={styles.price}>{price}</div>\n      </div>\n\n      {/* Form to add item to Cart */}\n      <div>\n        <FoodItemFrom id={props.id} onAddToCart={handleAddToCart} />\n      </div>\n    </li>\n  );\n};\n\nFoodItem.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  price: PropTypes.number,\n  id: PropTypes.string,\n};\n\nexport default FoodItem;\n","// Dummmy Data\nimport DUMMY_FOOD from \"../../utils/dummy-food\";\n\n// CSS Modules\nimport styles from \"./AvailableFood.module.css\";\n\n// Custom Components\nimport Card from \"../UI/Card\";\nimport FoodItem from \"./FoodItem/FoodItem\";\n\nconst AvailableFood = () => {\n  const foodList = DUMMY_FOOD.map((food) => (\n    <FoodItem\n      key={food.id}\n      id={food.id}\n      name={food.name}\n      description={food.description}\n      price={food.price}\n    />\n  ));\n  return (\n    <section className={styles.food}>\n      <Card>\n        {/* List of all Available Food */}\n        <ul>{foodList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableFood;\n","// Custom Components\nimport TaglineCard from \"../UI/TaglineCard\";\nimport AvailableFood from \"./AvailableFood\";\n\nconst Food = () => {\n  return (\n    <>\n      <TaglineCard />\n      <AvailableFood />\n    </>\n  );\n};\n\nexport default Food;\n","// React Hooks\nimport { useState } from \"react\";\n\n// Context\nimport CartProvider from \"./store/CartProvider\";\n\n//Custom Components\nimport Header from \"./components/Layout/Header\";\nimport Cart from \"./components/Cart/Cart\";\nimport Food from \"./components/Food/Food\";\n\nconst App = () => {\n  const [showCart, setShowCart] = useState(false);\n\n  const handleShowCart = () => {\n    setShowCart(true);\n  };\n\n  const handleHideCart = () => {\n    setShowCart(false);\n  };\n\n  return (\n    // Wrap for Components which need access to Cart Context\n    <CartProvider>\n      {/* Conditionally Render Cart */}\n      {showCart && <Cart onClose={handleHideCart} />}\n\n      {/* Header */}\n      <Header onShowCart={handleShowCart} />\n\n      {/* Main Content */}\n      <main>\n        <Food />\n      </main>\n    </CartProvider>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}